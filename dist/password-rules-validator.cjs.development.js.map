{"version":3,"file":"password-rules-validator.cjs.development.js","sources":["../src/components/password-rules-validator.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\"\r\ninterface CustomIconComponents {\r\n  ValidIcon: React.ReactNode\r\n  InvalidIcon: React.ReactNode\r\n}\r\ninterface PasswordProps {\r\n  value: string\r\n  valueAgain?: string\r\n  minLength?: number\r\n  maxLength?: number\r\n  iconSize?: number\r\n  validColor?: string\r\n  invalidColor?: string\r\n  validTextColor?: string\r\n  invalidTextColor?: string\r\n  onChange?: (isValid: boolean, failedRules: RuleNames[]) => any\r\n  messages?: {\r\n    [key in RuleNames]?: string\r\n  }\r\n  iconComponents?: CustomIconComponents\r\n}\r\n\r\nexport type RuleNames =\r\n  | \"minLength\"\r\n  | \"maxLength\"\r\n  | \"specialChar\"\r\n  | \"number\"\r\n  | \"capital\"\r\n  | \"match\"\r\n  | \"lowercase\"\r\n  | \"letter\"\r\n  | \"notEmpty\"\r\n  | \"noSpaces\"\r\n\r\nexport interface PasswordRulesValidatorProps extends PasswordProps {\r\n  className?: string\r\n  style?: React.CSSProperties\r\n  rules: Array<RuleNames>\r\n  rtl?: boolean\r\n  hideIcon?: boolean\r\n  specialCharsRegex?: RegExp\r\n}\r\n\r\nexport interface RuleProps {\r\n  valid: boolean\r\n  iconSize?: number\r\n  iconComponents?: CustomIconComponents\r\n  validColor?: string\r\n  invalidColor?: string\r\n  validTextColor?: string\r\n  invalidTextColor?: string\r\n  rtl?: boolean\r\n  hideIcon?: boolean\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst PasswordRulesValidator: React.FC<PasswordRulesValidatorProps> = ({\r\n  className,\r\n  style,\r\n  rules,\r\n  value,\r\n  valueAgain,\r\n  minLength,\r\n  maxLength,\r\n  rtl,\r\n  onChange,\r\n  specialCharsRegex = /[~`¿¡!#$%\\^&*€£@+÷=\\-\\[\\]\\\\';,/{}\\(\\)|\\\\\":<>\\?\\.\\_]/g,\r\n  messages = {},\r\n  ...remainingProps\r\n}) => {\r\n  const ruleDefinitions: {\r\n    [key in RuleNames]: { valid: boolean; message: string }\r\n  } = {\r\n    minLength: {\r\n      valid: value.length >= (minLength || 100),\r\n      message:\r\n        messages.minLength || `Password has at least ${minLength} characters.`\r\n    },\r\n    specialChar: {\r\n      valid: specialCharsRegex.test(value),\r\n      message: messages.specialChar || \"Password has special characters.\"\r\n    },\r\n    number: {\r\n      valid: /\\d/g.test(value),\r\n      message: messages.number || \"Password has a number.\"\r\n    },\r\n    noSpaces: {\r\n      valid: !value.includes(\" \"),\r\n      message: messages.noSpaces || \"Password has spaces.\"\r\n    },\r\n    capital: {\r\n      valid: (() => {\r\n        var i = 0\r\n        if (value.length === 0) {\r\n          return false\r\n        }\r\n        while (i < value.length) {\r\n          const character = value.charAt(i)\r\n          if (character == character.toLowerCase()) {\r\n            // Character is lowercase, numeric, or a symbol\r\n          } else if (character == character.toUpperCase()) {\r\n            return true\r\n          }\r\n          i++\r\n        }\r\n        return false\r\n      })(),\r\n      message: messages.capital || \"Password has a capital letter.\"\r\n    },\r\n    match: {\r\n      valid: value.length > 0 && value === valueAgain,\r\n      message: messages.match || \"Passwords match.\"\r\n    },\r\n    lowercase: {\r\n      valid: (() => {\r\n        var i = 0\r\n        if (value.length === 0) {\r\n          return false\r\n        }\r\n        while (i < value.length) {\r\n          const character = value.charAt(i)\r\n          if (character == character.toUpperCase()) {\r\n            // Character is lowercase, numeric, or a symbol\r\n          } else if (character == character.toLowerCase()) {\r\n            return true\r\n          }\r\n          i++\r\n        }\r\n        return false\r\n      })(),\r\n      message: messages.lowercase || \"Password has a lowercase letter.\"\r\n    },\r\n    letter: {\r\n      valid: /[a-zA-Z]/g.test(value),\r\n      message: messages.letter || \"Password has a letter.\"\r\n    },\r\n    maxLength: {\r\n      valid: value.length <= (maxLength || 16),\r\n      message:\r\n        messages.maxLength ||\r\n        `Password has no more than ${maxLength} characters.`\r\n    },\r\n    notEmpty: {\r\n      valid: Boolean(value.length > 0 && valueAgain && valueAgain.length > 0),\r\n      message: messages.notEmpty || \"Password fields are not empty.\"\r\n    }\r\n  }\r\n  const enabledRules: RuleNames[] = useMemo(\r\n    () => rules.filter(rule => Boolean(ruleDefinitions[rule])),\r\n    [rules]\r\n  )\r\n  const isValid: boolean = enabledRules.every(\r\n    rule => ruleDefinitions[rule].valid\r\n  )\r\n  const failedRules: RuleNames[] = useMemo(\r\n    () => enabledRules.filter(rule => !ruleDefinitions[rule].valid),\r\n    [value, valueAgain, enabledRules]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (typeof onChange === \"function\") {\r\n      onChange(isValid, failedRules)\r\n    }\r\n  }, [isValid, failedRules])\r\n\r\n  if (rtl) {\r\n    className = className ? className + \" rtl\" : \"rtl\"\r\n  }\r\n\r\n  return (\r\n    <ul\r\n      className={className}\r\n      style={{\r\n        margin: 0,\r\n        padding: 0,\r\n        ...style\r\n      }}\r\n    >\r\n      {enabledRules.map(rule => {\r\n        const { message, valid } = ruleDefinitions[rule]\r\n        return (\r\n          <Rule\r\n            key={rule}\r\n            valid={valid}\r\n            iconSize={18}\r\n            validColor=\"#4BCA81\"\r\n            invalidColor=\"#FF0033\"\r\n            rtl={rtl}\r\n            {...remainingProps}\r\n          >\r\n            {message}\r\n          </Rule>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Rule: React.FC<RuleProps> = ({\r\n  valid,\r\n  iconSize,\r\n  validColor,\r\n  invalidColor,\r\n  validTextColor,\r\n  invalidTextColor,\r\n  iconComponents,\r\n  hideIcon,\r\n  rtl,\r\n  children\r\n}) => {\r\n  return (\r\n    <li\r\n      className={valid ? \"valid\" : \"invalid\"}\r\n      style={{\r\n        listStyleType: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        margin: \"2px 0\"\r\n      }}\r\n    >\r\n      {!hideIcon ? (\r\n        iconComponents ? (\r\n          valid ? (\r\n            iconComponents.ValidIcon\r\n          ) : (\r\n            iconComponents.InvalidIcon\r\n          )\r\n        ) : (\r\n          <svg\r\n            className=\"checklist-icon\"\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width={iconSize}\r\n            height={iconSize}\r\n            viewBox=\"0 0 512 512\"\r\n            style={{ marginRight: rtl ? 0 : 5, marginLeft: rtl ? 5 : 0 }}\r\n          >\r\n            <path\r\n              fill={valid ? validColor : invalidColor}\r\n              d={\r\n                valid\r\n                  ? \"M432 64l-240 240-112-112-80 80 192 192 320-320z\"\r\n                  : \"M507.331 411.33c-0.002-0.002-0.004-0.004-0.006-0.005l-155.322-155.325 155.322-155.325c0.002-0.002 0.004-0.003 0.006-0.005 1.672-1.673 2.881-3.627 3.656-5.708 2.123-5.688 0.912-12.341-3.662-16.915l-73.373-73.373c-4.574-4.573-11.225-5.783-16.914-3.66-2.080 0.775-4.035 1.984-5.709 3.655 0 0.002-0.002 0.003-0.004 0.005l-155.324 155.326-155.324-155.325c-0.002-0.002-0.003-0.003-0.005-0.005-1.673-1.671-3.627-2.88-5.707-3.655-5.69-2.124-12.341-0.913-16.915 3.66l-73.374 73.374c-4.574 4.574-5.784 11.226-3.661 16.914 0.776 2.080 1.985 4.036 3.656 5.708 0.002 0.001 0.003 0.003 0.005 0.005l155.325 155.324-155.325 155.326c-0.001 0.002-0.003 0.003-0.004 0.005-1.671 1.673-2.88 3.627-3.657 5.707-2.124 5.688-0.913 12.341 3.661 16.915l73.374 73.373c4.575 4.574 11.226 5.784 16.915 3.661 2.080-0.776 4.035-1.985 5.708-3.656 0.001-0.002 0.003-0.003 0.005-0.005l155.324-155.325 155.324 155.325c0.002 0.001 0.004 0.003 0.006 0.004 1.674 1.672 3.627 2.881 5.707 3.657 5.689 2.123 12.342 0.913 16.914-3.661l73.373-73.374c4.574-4.574 5.785-11.227 3.662-16.915-0.776-2.080-1.985-4.034-3.657-5.707z\"\r\n              }\r\n            />\r\n          </svg>\r\n        )\r\n      ) : null}\r\n      <span\r\n        style={{\r\n          paddingTop: 2,\r\n          opacity: valid ? 1 : !invalidTextColor ? 0.5 : undefined,\r\n          flex: 1,\r\n          color: valid ? validTextColor : invalidTextColor\r\n        }}\r\n      >\r\n        {children}\r\n      </span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PasswordRulesValidator\r\n"],"names":["PasswordRulesValidator","_ref","className","style","rules","value","valueAgain","minLength","maxLength","rtl","onChange","_ref$specialCharsRege","specialCharsRegex","_ref$messages","messages","remainingProps","_objectWithoutPropertiesLoose","_excluded","ruleDefinitions","valid","length","message","specialChar","test","number","noSpaces","includes","capital","i","character","charAt","toLowerCase","toUpperCase","match","lowercase","letter","notEmpty","Boolean","enabledRules","useMemo","filter","rule","isValid","every","failedRules","useEffect","React","_extends","margin","padding","map","_ruleDefinitions$rule","Rule","key","iconSize","validColor","invalidColor","_ref2","validTextColor","invalidTextColor","iconComponents","hideIcon","children","listStyleType","display","alignItems","ValidIcon","InvalidIcon","version","xmlns","width","height","viewBox","marginRight","marginLeft","fill","d","paddingTop","opacity","undefined","flex","color"],"mappings":"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"}